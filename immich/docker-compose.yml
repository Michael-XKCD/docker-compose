# See https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml for latest image versions

networks:
  backend:
    internal: true
  proxynet:
    external: true

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich_server
    depends_on:
      - redis
      - database
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    networks:
      - proxynet
      - backend
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      PUID: 99
      PGID: 100
      UMASK: 022
      TZ: America/Los_Angeles
    healthcheck:
      disable: false
    labels:
      net.unraid.docker.webui: https://${UI_URL}
      net.unraid.docker.icon: https://avatars.githubusercontent.com/u/109746326?s=200&v=4

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - ${APPDATA_PATH}/model-cache:/cache
    networks:
      - backend
    healthcheck:
      disable: false
    labels:
      net.unraid.docker.icon: https://upload.wikimedia.org/wikipedia/commons/d/d5/Hey_Machine_Learning_Logo.png

  redis:
    image: ${REDIS_IMAGE}
    container_name: immich_redis
    volumes:
      - ${APPDATA_PATH}/redis-cache:/data
    networks:
      - backend
    healthcheck:
      test: redis-cli ping || exit 1
    labels:
      net.unraid.docker.icon: https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/redis.png

  database:
    image: ${DB_IMAGE}
    container_name: immich_postgress
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${APPDATA_PATH}/db:/var/lib/postgresql/data
    networks:
      - backend
    labels:
      net.unraid.docker.icon: https://raw.githubusercontent.com/Flight777/unraid_justworks_templates/main/images/postgres/Postgresql_elephant.png
# volumes:
#   model-cache:
